description: Re-implement Ruby's Array#transpose.
tags: []
level: medium
checks:
  ruby: ['assert(=([[1, :a], [2, :b], [3, :c]], transpose([[1, 2, 3], [:a, :b, :c]])))',
    'assert(=([[1, 3, 5], [2, 4, 6]], transpose([[1, 2], [3, 4], [5, 6]])))', 'assert(=([],
      transpose([])))']
  javascript: ['assert(=([[1, ''a''], [2, ''b''], [3, ''c'']], transpose([[1, 2, 3],
      [''a'', ''b'', ''c'']])));', 'assert(=([[1, 3, 5], [2, 4, 6]], transpose([[1,
      2], [3, 4], [5, 6]])));', 'assert(=([], transpose([])));']
  python: ['assert(=([[1, ''a''], [2, ''b''], [3, ''c'']], transpose([[1, 2, 3], [''a'',
      ''b'', ''c'']])))', 'assert(=([[1, 3, 5], [2, 4, 6]], transpose([[1, 2], [3,
      4], [5, 6]])))', 'assert(=([], transpose([])))']
  php: ['assert(=(array(array(1, ''a''), array(2, ''b''), array(3, ''c'')), transpose(array(array(1,
      2, 3), array(''a'', ''b'', ''c'')))));', 'assert(=(array(array(1, 3, 5), array(2,
      4, 6)), transpose(array(array(1, 2), array(3, 4), array(5, 6)))));', 'assert(=(array(),
      transpose(array())));']
